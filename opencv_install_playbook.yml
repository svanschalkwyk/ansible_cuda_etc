- hosts: deep_learning
  become: True
  vars:
    opencv_repo_url: https://github.com/Itseez/opencv/archive/3.1.0.zip
    opencv_contrib_url: https://github.com/Itseez/opencv_contrib/archive/3.1.0.zip
    pip_repo_url: https://bootstrap.pypa.io/get-pip.py
   
  tasks:
    - apt: update_cache=yes  force=yes
    
    - apt: name={{item}} state=present
      with_items: 
        - build-essential 
        - cmake 
        - git
        - build-essential
        - pkg-config
        - libjpeg8-dev
        - libtiff5-dev
        - libjasper-dev
        - libpng12-dev
        - libavcodec-dev
        - libavformat-dev
        - libswscale-dev
        - libv4l-dev
        - libxvidcore-dev
        - libx264-dev
        - libgtk-3-dev
        - libatlas-base-dev
        - gfortran
        - python2.7-dev
        - python3.5-dev
        - unzip

    - get_url: 
        url: "{{ opencv_repo_url }}"
        dest: /tmp/opencv.zip

    - get_url: 
        url: "{{ opencv_contrib_url }}"
        dest: /tmp/opencv_contrib.zip

    - get_url: 
        url: "{{ pip_repo_url }}"
        dest: /tmp
                
    - shell: cd /tmp && unzip -o opencv.zip
    - shell: cd /tmp && unzip -o opencv_contrib.zip
    - shell: python /tmp/get-pip.py
    - shell: pip install virtualenv virtualenvwrapper
    - shell: rm -rf /home/{{ ansible_user }}/get-pip.py /home/{{ ansible_user }}/.cache/pip
  
    - lineinfile: dest="/home/{{ ansible_user }}/.bashrc" line="# virtualenv and virtualenvwrapper"
    - lineinfile: dest="/home/{{ ansible_user }}/.bashrc" line="export WORKON_HOME=$HOME/.virtualenvs"
    - lineinfile: dest="/home/{{ ansible_user }}/.bashrc" line="source /usr/local/bin/virtualenvwrapper.sh"

#    - name: source .bashrc
#      become: False
#      action: shell source /home/{{ ansible_user }}/.bashrc
    
    - shell: mkvirtualenv cv -p python3
    - shell: workon cv     
      
    - command: cd /home/{{ ansible_user }}/opencv-3.1.0/
    - command: mkdir build
    - command: cd build
    - command: "cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local 
    -D INSTALL_PYTHON_EXAMPLES=ON -D INSTALL_C_EXAMPLES=OFF 
    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-3.1.0/modules 
    -D PYTHON_EXECUTABLE=~/.virtualenvs/cv/bin/python 
    -D BUILD_EXAMPLES=ON .."
    
    
#    - apt: 
#        name: libboost-all-dev 
#        state: present
#        install_recommends: no

#    - apt: update_cache=yes  force=yes
     
#    - shell: cd ~/caffe && cp Makefile.config.example Makefile.config
            
        